{"version":3,"file":"static/js/954.6e1efb09.chunk.js","mappings":"2JACA,MAAwB,yB,SCKxB,EAJkB,SAAHA,GAAsB,IAAhBC,EAAQD,EAARC,SACnB,OAAOC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAUH,SAAEA,GACpC,C,uDCHA,OAAgB,KAAO,4BAA4B,KAAO,4BAA4B,OAAS,+B,SCW/F,EAVsB,SAAHD,GAAyC,IAAnCK,EAAIL,EAAJK,KAAMJ,EAAQD,EAARC,SAAQD,EAAEM,IACvC,OACEJ,EAAAA,EAAAA,KAAA,WAASC,UAAS,GAAAI,OAAKH,EAAAA,KAAQ,KAAAG,OAAIF,EAAOD,EAAIC,GAAQ,IAAKJ,SACxDA,GAKP,C,qECTA,EAAuB,uBAAvB,EAAwD,0B,SCYxD,EAViB,SAAHD,GAAqB,IAAfQ,EAAOR,EAAPQ,QAClB,OACEC,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAASH,SAAA,EACvBC,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAG,IAAGV,SAAC,UACbC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,OACNC,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAYH,SAAEO,MAGrC,C,uDCVA,OAAgB,KAAO,uBAAuB,WAAa,6BAA6B,QAAU,2B,SCOlG,EANiB,SAAHR,GAA+B,IAAzBY,EAAOZ,EAAPY,QAASX,EAAQD,EAARC,SAC3B,OACEC,EAAAA,EAAAA,KAAA,KAAGC,UAAS,GAAAI,OAAKH,EAAAA,KAAQ,KAAAG,OAAIK,EAAUR,EAAIQ,GAAW,IAAKX,SAAEA,GAEjE,C,oLCLA,GAAgB,UAAY,iCAAiC,SAAW,gCAAgC,UAAY,iCAAiC,WAAa,kCAAkC,QAAU,+BAA+B,QAAU,+BAA+B,UAAY,iCAAiC,kBAAoB,yCAAyC,aAAe,oCAAoC,cAAgB,qCAAqC,gBAAkB,uCAAuC,UAAY,iCAAiC,iBAAmB,wCAAwC,aAAe,oCAAoC,eAAiB,sCAAsC,WAAa,kCAAkC,eAAiB,sCAAsC,iBAAmB,wCAAwC,WAAa,kCAAkC,YAAc,mCAAmC,gBAAkB,uCAAuC,aAAe,oCAAoC,QAAU,+BAA+B,QAAU,+BAA+B,SAAW,gCAAgC,iBAAmB,wCAAwC,UAAY,iCAAiC,UAAY,iCAAiC,aAAe,qC,mGCY33CY,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAEJG,SAAS,qBACTC,KAAK,WAAY,2BAA2B,SAAAC,GAC3C,OACEA,GACAA,EAAM,IACN,CAAC,aAAc,YAAa,aAAaC,SAASD,EAAM,GAAGE,KAE/D,IACFC,MAAOR,EAAAA,KAAaG,SAAS,qBAC7BM,YAAaT,EAAAA,KAEVG,SAAS,2BACTO,IAAI,IAAK,gDACZC,SAAUX,EAAAA,KAEPC,MAAM,CACLI,MAAOL,EAAAA,KAAaG,SAAS,0BAE9BA,SAAS,wBACZS,KAAMZ,EAAAA,KAEHC,MAAM,CACLI,MAAOL,EAAAA,KAAaG,SAAS,sBAE9BA,SAAS,oBACZU,gBAAiBb,EAAAA,KAEdc,GACCd,EAAAA,KAAaC,MAAM,CACjBc,GAAIf,EAAAA,KAAaG,SAAS,0BAC1Ba,QAAShB,EAAAA,KAAaG,SAAS,0BAGlCc,IAAI,EAAG,uCACVC,aAAclB,EAAAA,KAEXG,SAAS,6BACTO,IAAI,IAAK,mDAERS,EAAe,CACnBC,QAAS,SAAAC,GAAQ,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACZD,GAAQ,IACXE,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,IAAK,QACLC,aAAc,OACdC,OAAQ,sDACRC,MAAO,OACPC,UAAW,OAAK,EAElBC,YAAa,SAAAV,GAAQ,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBD,GAAQ,IACXW,MAAO,4CACPC,SAAU,OACVC,WAAY,MACZC,WAAY,MACZC,cAAe,UACfC,WAAY,SACZC,SAAU,SACVC,aAAc,WACdV,MAAO,QAAM,EAEfW,KAAM,SAAAnB,GAAQ,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACTD,GAAQ,IACXW,MAAO,4CACPC,SAAU,OACVC,WAAY,MACZC,WAAY,MACZC,cAAe,WAAS,GA0R5B,EAtRsB,WACpB,IAAAK,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAAsCL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAA8CT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAnDtC,EAAeuC,EAAA,GAAEC,EAAkBD,EAAA,GAC1CE,GAAsCZ,EAAAA,EAAAA,UAAS,GAAEa,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAA1CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAC5BG,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAcF,EAAAA,EAAAA,IAAYG,EAAAA,IAC1BC,GAAQJ,EAAAA,EAAAA,IAAYK,EAAAA,IAE1BC,GASIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYrE,KATtBsE,EAAQJ,EAARI,SACAC,EAAYL,EAAZK,aACAlD,EAAO6C,EAAP7C,QACamD,EAAMN,EAAnBO,UAAaD,OACbE,EAAQR,EAARQ,SACAC,EAAST,EAATS,UACAC,EAAKV,EAALU,MACAC,EAAOX,EAAPW,QAgBFC,QAAQC,IAAIP,GACZ,IAQMQ,EAAmB,SAAAC,GACvB,IAAMC,EAAOD,EAAIE,OAAOC,MAAM,GAC1BF,GACFnC,EAAgBsC,IAAIC,gBAAgBJ,GAExC,EAOMK,EAAoB,eAAApG,GAAAqG,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA1E,EAAA,OAAAwE,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEU,GAD/BH,EAAahB,EAAU,eACvB1D,EAAU0D,EAAU,YACtBgB,IAAc1E,EAAO,CAAA2E,EAAAE,KAAA,SAGO,OAF9BxC,GAAmB,SAAAuC,GAAI,SAAAnG,QAAAqG,EAAAA,EAAAA,GAAQF,GAAI,CAAE,CAAE7E,GAAI2E,EAAWrF,MAAOW,QAAAA,IAAY,IACzEyD,EAAS,UAAW,IACpBA,EAAS,cAAe,MAAMkB,EAAAE,KAAA,EACxBjB,EAAQ,mBAAmB,KAAD,EAAAe,EAAAE,KAAA,iBAEhCE,MAAM,mDAAmD,yBAAAJ,EAAAK,OAAA,GAAAP,EAAA,KAE5D,kBAXyB,OAAAvG,EAAA+G,MAAA,KAAAC,UAAA,KAoB1B,OACE9G,EAAAA,EAAAA,KAAA,QAAM+G,SAAU7B,GArDD,SAAA8B,GACgB,IAA3BvF,EAAgBwF,QAIpBD,EAAKnD,YAAcA,EACnBmD,EAAKvC,YAAchD,EACnBuF,EAAKzF,SAAWyF,EAAKzF,SAASN,MAC9B+F,EAAKxF,KAAOwF,EAAKxF,KAAKP,aACf+F,EAAKpF,SAPV+E,MAAM,qCAQV,IA2CyC5G,UACrCQ,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,QAAYH,SAAA,EAC1BQ,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,QAAYH,SAAA,CACzB0D,GACClD,EAAAA,EAAAA,MAAA,SAAO2G,MAAO,CAAE/E,QAAS,QAASpC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,WAAeH,UAC7BC,EAAAA,EAAAA,KAAA,OAAKmH,KAAI,GAAA9G,OAAK+G,EAAAA,EAAK,qBAErBpH,EAAAA,EAAAA,KAAA,SAAAkC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEjC,UAAWC,EAAAA,WACP+E,EAAS,QAAS,CACpBoC,SAAU1B,KACV,IACFxE,KAAK,cAITZ,EAAAA,EAAAA,MAAA,SAAAR,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,WAAeH,UAC7BC,EAAAA,EAAAA,KAAA,OAAKmH,KAAI,GAAA9G,OAAK+G,EAAAA,EAAK,qBAErBpH,EAAAA,EAAAA,KAAA,SAAAkC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEjC,UAAWC,EAAAA,WACP+E,EAAS,QAAS,CACpBoC,SAAU1B,KACV,IACFxE,KAAK,aAKVsC,IACCzD,EAAAA,EAAAA,KAAA,OACEC,UAAWC,EAAAA,UACXoH,IAAK7D,EACL8D,IAAI,UACJ9E,MAAM,WAIX0C,EAAOqC,QACNxH,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAAA,aAAiBH,SAAEoF,EAAOqC,MAAMC,WAEnDlH,EAAAA,EAAAA,MAAA,OAAAR,SAAA,EACEQ,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,gBAAoBH,SAAA,EAClCQ,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,aAAiBH,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,SAAAkC,EAAAA,EAAAA,GAAA,CACEwF,YAAY,yBACZzH,UAAWC,EAAAA,UACXiB,KAAK,QACD8D,EAAS,WAEdE,EAAOwC,OACN3H,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAAA,aAAiBH,SAAEoF,EAAOwC,KAAKF,WAElDlH,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,eAAmBH,SAAA,EACjCC,EAAAA,EAAAA,KAAA,SAAAkC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEjC,UAAWC,EAAAA,kBACP+E,EAAS,cAAe,CAC1BoC,SArFQ,SAAAzB,GACxB,IAAQ3E,EAAU2E,EAAIE,OAAd7E,MACRoD,EAAepD,EAAMgG,OACvB,KAmFkB,IACFS,YAAY,kCACZvG,KAAK,UAENgE,EAAO9D,cACNrB,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAAA,aAAiBH,SAC/BoF,EAAO9D,YAAYoG,WAGxBzH,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAAA,WAAeH,SAAA,GAAAM,OAAK+D,EAAW,iBAGpD7D,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,kBAAsBH,SAAA,EACpCQ,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,aAAiBH,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,SAAOC,UAAWC,EAAAA,iBAAqBH,SAAC,cACxCC,EAAAA,EAAAA,KAAC4H,EAAAA,GAAU,CACTD,KAAK,WACL3F,QAASA,EACT6F,OAAQ,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAK,OACd/H,EAAAA,EAAAA,KAACgI,EAAAA,IAAM9F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACLwF,YAAY,oBACZO,OAAQlG,GACJgG,GAAK,IACTG,QAAS5D,IACT,IAGLa,EAAO5D,WACNvB,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAAA,aAAiBH,SAC/BoF,EAAO5D,SAASkG,cAIvBlH,EAAAA,EAAAA,MAAA,OAAAR,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,UAAWC,EAAAA,iBAAqBH,SAAC,kBACxCQ,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,WAAeH,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,UACEC,UAAWC,EAAAA,QACXiI,QAvIM,WACtBrE,GAAe,SAAAsE,GAAQ,OAAKA,EAAW,EAAIA,EAAW,GAAK,CAAC,GAC9D,EAsIkBjH,KAAK,SAAQpB,UAEbC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,SAAaH,UAC3BC,EAAAA,EAAAA,KAAA,OAAKmH,KAAI,GAAA9G,OAAK+G,EAAAA,EAAK,sBAGvB7G,EAAAA,EAAAA,MAAA,QAAMN,UAAWC,EAAAA,YAAgBH,SAAA,CAAE8D,EAAY,WAC/C7D,EAAAA,EAAAA,KAAA,UACEC,UAAWC,EAAAA,QACXiI,QArJI,WACpBrE,GAAe,SAAAsE,GAAQ,OAAIA,EAAW,EAAE,GAC1C,EAoJkBjH,KAAK,SAAQpB,UAEbC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,SAAaH,UAC3BC,EAAAA,EAAAA,KAAA,OAAKmH,KAAI,GAAA9G,OAAK+G,EAAAA,EAAK,8BAM7B7G,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,QAAYH,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SAAOC,UAAWC,EAAAA,iBAAqBH,SAAC,UACxCC,EAAAA,EAAAA,KAAC4H,EAAAA,GAAU,CACTD,KAAK,OACL3F,QAASA,EACT6F,OAAQ,SAAAQ,GAAA,IAAGN,EAAKM,EAALN,MAAK,OACd/H,EAAAA,EAAAA,KAACgI,EAAAA,IAAM9F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACLwF,YAAY,YACZO,OAAQlG,GACJgG,GAAK,IACTG,QAASvD,IACT,QAIRpE,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,eAAmBH,SAAA,EACjCC,EAAAA,EAAAA,KAAA,SAAOC,UAAWC,EAAAA,iBAAqBH,SAAC,iBACxCC,EAAAA,EAAAA,KAAC4H,EAAAA,GAAU,CACTD,KAAK,cACL3F,QAASA,EACT6F,OAAQ,SAAAS,GAAA,IAAGP,EAAKO,EAALP,MAAK,OACd/H,EAAAA,EAAAA,KAACgI,EAAAA,IAAM9F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACLwF,YAAY,qBACZO,OAAQlG,GACJgG,GAAK,IACTG,QAASzD,IACT,KAGNzE,EAAAA,EAAAA,KAAA,SAAAkC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEjC,UAAWC,EAAAA,eACP+E,EAAS,YAAU,IACvB9D,KAAK,OACLuG,YAAY,oBAEbvC,EAAOV,aAAeU,EAAOoD,WAC5BvI,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAAA,aAAiBH,SAC/BoF,EAAOV,YAAYgD,iBAK5BlH,EAAAA,EAAAA,MAACiI,EAAAA,EAAU,CACTrH,KAAK,SACLyB,MAAM,YACN6F,KAAK,SACLN,QAASjC,EAAqBnG,SAAA,EAE9BC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,oBACNC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,OAAKmH,KAAI,GAAA9G,OAAK+G,EAAAA,EAAK,sBAGvBpH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,gBAAoBH,UACjCC,EAAAA,EAAAA,KAAA,YAEFO,EAAAA,EAAAA,MAAA,OAAAR,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,UAAWC,EAAAA,iBAAqBH,SAAC,wBACxCC,EAAAA,EAAAA,KAAA,YAAAkC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEjC,UAAWC,EAAAA,kBACP+E,EAAS,iBAAe,IAC5ByC,YAAY,kBAEbvC,EAAOuD,cACN1I,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAAA,aAAiBH,SAC/BoF,EAAOuD,YAAYjB,cAI1BlH,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,aAAiBH,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,UAAQmI,QApMG,WACnB5C,IACA7B,EAAgB,MAChBI,EAAe,GACfG,EAAmB,GACrB,EA+LyChE,UAAWC,EAAAA,UAAcH,UACtDC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,UAAcH,UAC5BC,EAAAA,EAAAA,KAAA,OAAKmH,KAAI,GAAA9G,OAAK+G,EAAAA,EAAK,sBAGvBpH,EAAAA,EAAAA,KAACwI,EAAAA,EAAU,CAACrH,KAAK,SAASyB,MAAM,UAAU6F,KAAK,QAAO1I,SAAC,sBAQnE,E,UCrVA,EAlBsB,WACpB,OACEQ,EAAAA,EAAAA,MAACoI,EAAAA,EAAa,CAACvI,IAAI,UAASL,SAAA,EAC1BQ,EAAAA,EAAAA,MAAA,OAAKN,UAAU,UAASF,SAAA,EACtBC,EAAAA,EAAAA,KAAC4I,EAAAA,EAAQ,CAACtI,QAAQ,gBAClBC,EAAAA,EAAAA,MAAA,OAAAR,SAAA,EACEC,EAAAA,EAAAA,KAAC6I,EAAAA,EAAS,CAAA9I,SAAC,gBACXC,EAAAA,EAAAA,KAAC8I,EAAAA,EAAQ,CAAA/I,SAAC,6GAMdC,EAAAA,EAAAA,KAAC+I,EAAa,MAGpB,C,4DCjBanE,GAAqBoE,E,QAAAA,KAHP,SAAAC,GAAK,OAAIA,EAAMtE,MAAMuE,KAAM,IAGQ,SAAAvE,GAAK,OACjEA,EAAMwE,KAAI,SAAArJ,GAAY,MAAQ,CAAEmB,MAAhBnB,EAAHsJ,IAA+BC,MAAtBvJ,EAAJ6H,KAAuC,GAAE,G,8FCJhD2B,EAAmB,SAAAL,GAAK,OAAIA,EAAM3E,WAAW4E,KAAM,EAGnD1E,GAA0BwE,EAAAA,EAAAA,IACrCM,GACA,SAAAhF,GAAU,OAAIA,EAAW6E,KAAI,SAAArJ,GAAY,MAAQ,CAAEmB,MAAhBnB,EAAHsJ,IAA+BC,MAAtBvJ,EAAJ6H,KAAuC,GAAE,IAEnE4B,GAAuBP,EAAAA,EAAAA,IAClC,CAACM,EAAkB,SAACE,EAAGC,GAAM,OAAKA,CAAM,IACxC,SAACP,EAAOO,GAAM,OAAU,OAALP,QAAK,IAALA,OAAK,EAALA,EAAOQ,MAAK,SAAA5B,GAAM,OAAAA,EAAHsB,MAAkBK,CAAM,GAAC,G,4DCLhD/E,GAA2BsE,E,QAAAA,KAJP,SAAAC,GAAK,OAAIA,EAAMxE,YAAYyE,KAAM,IAMhE,SAAAzE,GAAW,OACTA,EAAY0E,KAAI,SAAArJ,GAAY,MAAQ,CAAEmB,MAAhBnB,EAAHsJ,IAA+BC,MAAtBvJ,EAAJ6H,KAAuC,GAAE,G","sources":["webpack://project-ucranes03/./src/components/Shared/MainTitle/MainTitle.module.css?2cff","components/Shared/MainTitle/MainTitle.jsx","webpack://project-ucranes03/./src/components/Shared/PageContainer/PageContainer.module.css?4fb0","components/Shared/PageContainer/PageContainer.jsx","webpack://project-ucranes03/./src/components/Shared/PathInfo/PathInfo.module.css?3dfa","components/Shared/PathInfo/PathInfo.jsx","webpack://project-ucranes03/./src/components/Shared/Subtitle/Subtitle.module.css?b65a","components/Shared/Subtitle/Subtitle.jsx","webpack://project-ucranes03/./src/components/AddRecipeForm/AddRecipeForm.module.css?5f40","components/AddRecipeForm/AddRecipeForm.jsx","pages/AddRecipePage.jsx","store/areasSlice/selectors.js","store/categoriesSlice/selectors.js","store/ingredientsSlice/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"MainTitle_title__R5KXq\"};","import css from './MainTitle.module.css';\n\nconst MainTitle = ({ children }) => {\n  return <h2 className={css.title}>{children}</h2>;\n};\n\nexport default MainTitle;\n","// extracted by mini-css-extract-plugin\nexport default {\"page\":\"PageContainer_page__uM9Tb\",\"home\":\"PageContainer_home__oMp0D\",\"recipe\":\"PageContainer_recipe__2uBu-\"};","import css from './PageContainer.module.css';\n\nconst PageContainer = ({ page, children, tag = 'div' }) => {\n  return (tag = 'section' ? (\n    <section className={`${css.page} ${page ? css[page] : ''}`}>\n      {children}\n    </section>\n  ) : (\n    <div className={`${css.page} ${page ? css[page] : ''}`}>{children}</div>\n  ));\n};\n\nexport default PageContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"path\":\"PathInfo_path__rwXvn\",\"current\":\"PathInfo_current__3TPtY\"};","import { Link } from 'react-router-dom';\nimport css from './PathInfo.module.css';\n\nconst PathInfo = ({ current }) => {\n  return (\n    <div className={css.path}>\n      <Link to=\"/\">Home</Link>\n      <span>/</span>\n      <span className={css.current}>{current}</span>\n    </div>\n  );\n};\n\nexport default PathInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"Subtitle_text__tBnTO\",\"categories\":\"Subtitle_categories__vridf\",\"recipes\":\"Subtitle_recipes__qvZt7\"};","import css from './Subtitle.module.css';\n\nconst Subtitle = ({ section, children }) => {\n  return (\n    <p className={`${css.text} ${section ? css[section] : ''}`}>{children}</p>\n  );\n};\n\nexport default Subtitle;\n","// extracted by mini-css-extract-plugin\nexport default {\"titleForm\":\"AddRecipeForm_titleForm__IC+vF\",\"textForm\":\"AddRecipeForm_textForm__vOSUS\",\"inputFile\":\"AddRecipeForm_inputFile__AD+E1\",\"iconCamera\":\"AddRecipeForm_iconCamera__sGth3\",\"boxForm\":\"AddRecipeForm_boxForm__MMue-\",\"boxFile\":\"AddRecipeForm_boxFile__m0CrR\",\"photoFile\":\"AddRecipeForm_photoFile__jNb9+\",\"boxTimeCategories\":\"AddRecipeForm_boxTimeCategories__WpVAD\",\"boxInputName\":\"AddRecipeForm_boxInputName__bTAwd\",\"inputQuantity\":\"AddRecipeForm_inputQuantity__VCH4M\",\"listIngredients\":\"AddRecipeForm_listIngredients__-8AJI\",\"inputName\":\"AddRecipeForm_inputName__xexlb\",\"inputDescription\":\"AddRecipeForm_inputDescription__tsMIg\",\"boxSelectCat\":\"AddRecipeForm_boxSelectCat__-bn4E\",\"lineUnderInput\":\"AddRecipeForm_lineUnderInput__Am6Lg\",\"textLength\":\"AddRecipeForm_textLength__3bCsS\",\"boxDescription\":\"AddRecipeForm_boxDescription__2Jh2K\",\"titleDescription\":\"AddRecipeForm_titleDescription__oVvm5\",\"boxTimeBtn\":\"AddRecipeForm_boxTimeBtn__BslqG\",\"counterTime\":\"AddRecipeForm_counterTime__tcc5a\",\"boxNameCateIngr\":\"AddRecipeForm_boxNameCateIngr__w95Vn\",\"boxBtnDelPub\":\"AddRecipeForm_boxBtnDelPub__75Ou5\",\"boxArea\":\"AddRecipeForm_boxArea__9b4Fd\",\"BtnTime\":\"AddRecipeForm_BtnTime__omaCi\",\"iconTime\":\"AddRecipeForm_iconTime__Wf+fZ\",\"inputPreparation\":\"AddRecipeForm_inputPreparation__uWFXn\",\"btnDelete\":\"AddRecipeForm_btnDelete__NR9xO\",\"deleteBtn\":\"AddRecipeForm_deleteBtn__WW7iQ\",\"errorMessage\":\"AddRecipeForm_errorMessage__9Sqsz\"};","import ButtonLink from 'components/Shared/ButtonLink/ButtonLink';\nimport icons from '../../images/icons.svg';\nimport css from './AddRecipeForm.module.css';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useState } from 'react';\nimport Select from 'react-select';\nimport { useSelector } from 'react-redux';\nimport { selectCategoriesOptions } from 'store/categoriesSlice/selectors';\nimport { selectIngredientsOptions } from 'store/ingredientsSlice/selectors';\nimport { selectAreasOptions } from 'store/areasSlice/selectors';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nconst schema = yup.object().shape({\n  thumb: yup\n    .mixed()\n    .required('Photo is required')\n    .test('fileType', 'Unsupported File Format', value => {\n      return (\n        value &&\n        value[0] &&\n        ['image/jpeg', 'image/png', 'image/gif'].includes(value[0].type)\n      );\n    }),\n  title: yup.string().required('Title is required'),\n  description: yup\n    .string()\n    .required('Description is required')\n    .max(200, 'Description should not exceed 200 characters'),\n  category: yup\n    .object()\n    .shape({\n      value: yup.string().required('Category is required'),\n    })\n    .required('Category is required'),\n  area: yup\n    .object()\n    .shape({\n      value: yup.string().required('Area is required'),\n    })\n    .required('Area is required'),\n  ingredientsList: yup\n    .array()\n    .of(\n      yup.object().shape({\n        id: yup.string().required('Ingredient is required'),\n        measure: yup.string().required('Measure is required'),\n      })\n    )\n    .min(1, 'At least one ingredient is required'),\n  instructions: yup\n    .string()\n    .required('Instructions are required')\n    .max(200, 'Instructions should not exceed 200 characters'),\n});\nconst customStyles = {\n  control: provided => ({\n    ...provided,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    gap: '188px',\n    borderRadius: '30px',\n    border: '1px solid var(--color-main-12, rgba(5, 5, 5, 0.12))',\n    width: '100%',\n    marginTop: '8px',\n  }),\n  singleValue: provided => ({\n    ...provided,\n    color: 'var(--color-main-60, rgba(5, 5, 5, 0.60))',\n    fontSize: '14px',\n    fontWeight: '500',\n    lineHeight: '1.4',\n    letterSpacing: '-0.02em',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    width: '100%',\n  }),\n  menu: provided => ({\n    ...provided,\n    color: 'var(--color-main-60, rgba(5, 5, 5, 0.60))',\n    fontSize: '14px',\n    fontWeight: '500',\n    lineHeight: '1.4',\n    letterSpacing: '-0.02em',\n  }),\n};\n\nconst AddRecipeForm = () => {\n  const [previewImage, setPreviewImage] = useState(null);\n  const [cookingTime, setCookingTime] = useState(0);\n  const [ingredientsList, setIngredientsList] = useState([]);\n  const [countLength, setCountLength] = useState(0);\n  const categories = useSelector(selectCategoriesOptions);\n  const ingredients = useSelector(selectIngredientsOptions);\n  const areas = useSelector(selectAreasOptions);\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: { errors },\n    setValue,\n    getValues,\n    reset,\n    trigger,\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = data => {\n    if (ingredientsList.length === 0) {\n      alert('Please add at least one ingredient');\n      return;\n    }\n    data.cookingTime = cookingTime;\n    data.ingredients = ingredientsList;\n    data.category = data.category.value;\n    data.area = data.area.value;\n    delete data.measure;\n  };\n  console.log(errors);\n  const handleAddTime = () => {\n    setCookingTime(prevTime => prevTime + 10);\n  };\n\n  const handleMinusTime = () => {\n    setCookingTime(prevTime => (prevTime > 0 ? prevTime - 10 : 0));\n  };\n\n  const handleFileChange = evt => {\n    const file = evt.target.files[0];\n    if (file) {\n      setPreviewImage(URL.createObjectURL(file));\n    }\n  };\n\n  const handleDescription = evt => {\n    const { value } = evt.target;\n    setCountLength(value.length);\n  };\n\n  const handleAddIngredients = async () => {\n    const ingredient = getValues('ingredients');\n    const measure = getValues('measure');\n    if (ingredient && measure) {\n      setIngredientsList(prev => [...prev, { id: ingredient.value, measure }]);\n      setValue('measure', '');\n      setValue('ingredients', null);\n      await trigger('ingredientsList');\n    } else {\n      alert('Please select an ingredient and enter a measure');\n    }\n  };\n\n  const handleDelete = () => {\n    reset();\n    setPreviewImage(null);\n    setCookingTime(0);\n    setIngredientsList([]);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className={css.boxForm}>\n        <div className={css.boxFile}>\n          {previewImage ? (\n            <label style={{ display: 'none' }}>\n              <svg className={css.iconCamera}>\n                <use href={`${icons}#icon-camera`}></use>\n              </svg>\n              <input\n                className={css.inputFile}\n                {...register('thumb', {\n                  onChange: handleFileChange,\n                })}\n                type=\"file\"\n              />\n            </label>\n          ) : (\n            <label>\n              <svg className={css.iconCamera}>\n                <use href={`${icons}#icon-camera`}></use>\n              </svg>\n              <input\n                className={css.inputFile}\n                {...register('thumb', {\n                  onChange: handleFileChange,\n                })}\n                type=\"file\"\n              />\n            </label>\n          )}\n\n          {previewImage && (\n            <img\n              className={css.photoFile}\n              src={previewImage}\n              alt=\"Preview\"\n              width=\"100\"\n            />\n          )}\n        </div>\n        {errors.photo && (\n          <span className={css.errorMessage}>{errors.photo.message}</span>\n        )}\n        <div>\n          <div className={css.boxNameCateIngr}>\n            <div className={css.boxInputName}>\n              <input\n                placeholder=\"The name of the recipe\"\n                className={css.inputName}\n                type=\"text\"\n                {...register('title')}\n              />\n              {errors.name && (\n                <span className={css.errorMessage}>{errors.name.message}</span>\n              )}\n              <div className={css.boxDescription}>\n                <input\n                  className={css.inputDescription}\n                  {...register('description', {\n                    onChange: handleDescription,\n                  })}\n                  placeholder=\"Enter a description of the dish\"\n                  type=\"text\"\n                />\n                {errors.description && (\n                  <span className={css.errorMessage}>\n                    {errors.description.message}\n                  </span>\n                )}\n                <span className={css.textLength}>{`${countLength}/200`}</span>\n              </div>\n            </div>\n            <div className={css.boxTimeCategories}>\n              <div className={css.boxSelectCat}>\n                <label className={css.titleDescription}>Category</label>\n                <Controller\n                  name=\"category\"\n                  control={control}\n                  render={({ field }) => (\n                    <Select\n                      placeholder=\"Select a category\"\n                      styles={customStyles}\n                      {...field}\n                      options={categories}\n                    />\n                  )}\n                />\n                {errors.category && (\n                  <span className={css.errorMessage}>\n                    {errors.category.message}\n                  </span>\n                )}\n              </div>\n              <div>\n                <label className={css.titleDescription}>COOKING TIME</label>\n                <div className={css.boxTimeBtn}>\n                  <button\n                    className={css.BtnTime}\n                    onClick={handleMinusTime}\n                    type=\"button\"\n                  >\n                    <svg className={css.iconTime}>\n                      <use href={`${icons}#icon-minus`}></use>\n                    </svg>\n                  </button>\n                  <span className={css.counterTime}>{cookingTime} min</span>\n                  <button\n                    className={css.BtnTime}\n                    onClick={handleAddTime}\n                    type=\"button\"\n                  >\n                    <svg className={css.iconTime}>\n                      <use href={`${icons}#icon-plus`}></use>\n                    </svg>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div className={css.boxArea}>\n              <label className={css.titleDescription}>Area</label>\n              <Controller\n                name=\"area\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    placeholder=\"Pick area\"\n                    styles={customStyles}\n                    {...field}\n                    options={areas}\n                  />\n                )}\n              />\n            </div>\n            <div className={css.boxIngredients}>\n              <label className={css.titleDescription}>Ingredients</label>\n              <Controller\n                name=\"ingredients\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    placeholder=\"Add the ingredient\"\n                    styles={customStyles}\n                    {...field}\n                    options={ingredients}\n                  />\n                )}\n              />\n              <input\n                className={css.inputQuantity}\n                {...register('measure')}\n                type=\"text\"\n                placeholder=\"Enter quantity\"\n              />\n              {errors.ingredients && errors.quantity && (\n                <span className={css.errorMessage}>\n                  {errors.ingredients.message}\n                </span>\n              )}\n            </div>\n          </div>\n          <ButtonLink\n            type=\"button\"\n            color=\"secondary\"\n            size=\"normal\"\n            onClick={handleAddIngredients}\n          >\n            <span>Add ingredient</span>\n            <svg>\n              <use href={`${icons}#icon-plus`} />\n            </svg>\n          </ButtonLink>\n          <ul className={css.listIngredients}>\n            <li></li>\n          </ul>\n          <div>\n            <label className={css.titleDescription}>Recipe Preparation</label>\n            <textarea\n              className={css.inputPreparation}\n              {...register('instructions')}\n              placeholder=\"Enter recipe\"\n            ></textarea>\n            {errors.preparation && (\n              <span className={css.errorMessage}>\n                {errors.preparation.message}\n              </span>\n            )}\n          </div>\n          <div className={css.boxBtnDelPub}>\n            <button onClick={handleDelete} className={css.deleteBtn}>\n              <svg className={css.btnDelete}>\n                <use href={`${icons}#icon-trash`}></use>\n              </svg>\n            </button>\n            <ButtonLink type=\"submit\" color=\"primary\" size=\"large\">\n              Publish\n            </ButtonLink>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default AddRecipeForm;\n","import PathInfo from 'components/Shared/PathInfo/PathInfo';\nimport MainTitle from 'components/Shared/MainTitle/MainTitle';\nimport Subtitle from 'components/Shared/Subtitle/Subtitle';\nimport AddRecipeForm from 'components/AddRecipeForm/AddRecipeForm';\nimport PageContainer from 'components/Shared/PageContainer/PageContainer';\n\nconst AddRecipePage = () => {\n  return (\n    <PageContainer tag=\"section\">\n      <div className=\"section\">\n        <PathInfo current=\"Add recipe\" />\n        <div>\n          <MainTitle>Add recipe</MainTitle>\n          <Subtitle>\n            Reveal your culinary art, share your favorite recipe and create\n            gastronomic masterpieces with us.\n          </Subtitle>\n        </div>\n      </div>\n      <AddRecipeForm />\n    </PageContainer>\n  );\n};\n\nexport default AddRecipePage;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectAreas = state => state.areas.items;\nexport const selectError = state => state.areas.error;\nexport const selectIsLoading = state => state.areas.isLoading;\nexport const selectAreasOptions = createSelector(selectAreas, areas =>\n  areas.map(({ _id, name }) => ({ value: _id, label: name }))\n);\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectCategories = state => state.categories.items;\nexport const selectError = state => state.categories.error;\nexport const selectIsLoading = state => state.categories.isLoading;\nexport const selectCategoriesOptions = createSelector(\n  selectCategories,\n  categories => categories.map(({ _id, name }) => ({ value: _id, label: name }))\n);\nexport const selectActiveCategory = createSelector(\n  [selectCategories, (_, itemId) => itemId],\n  (items, itemId) => items?.find(({ _id }) => _id === itemId)\n);\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectIngredients = state => state.ingredients.items;\nexport const selectError = state => state.indgredients.error;\nexport const selectIsLoading = state => state.indgredients.isLoading;\nexport const selectFilter = state => state.indgredients.filter;\nexport const selectIngredientsOptions = createSelector(\n  selectIngredients,\n  ingredients =>\n    ingredients.map(({ _id, name }) => ({ value: _id, label: name }))\n);\n"],"names":["_ref","children","_jsx","className","css","page","tag","concat","current","_jsxs","Link","to","section","schema","yup","shape","thumb","required","test","value","includes","type","title","description","max","category","area","ingredientsList","of","id","measure","min","instructions","customStyles","control","provided","_objectSpread","display","justifyContent","alignItems","gap","borderRadius","border","width","marginTop","singleValue","color","fontSize","fontWeight","lineHeight","letterSpacing","whiteSpace","overflow","textOverflow","menu","_useState","useState","_useState2","_slicedToArray","previewImage","setPreviewImage","_useState3","_useState4","cookingTime","setCookingTime","_useState5","_useState6","setIngredientsList","_useState7","_useState8","countLength","setCountLength","categories","useSelector","selectCategoriesOptions","ingredients","selectIngredientsOptions","areas","selectAreasOptions","_useForm","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","setValue","getValues","reset","trigger","console","log","handleFileChange","evt","file","target","files","URL","createObjectURL","handleAddIngredients","_asyncToGenerator","_regeneratorRuntime","_callee","ingredient","_context","prev","next","_toConsumableArray","alert","stop","apply","arguments","onSubmit","data","length","style","href","icons","onChange","src","alt","photo","message","placeholder","name","Controller","render","_ref2","field","Select","styles","options","onClick","prevTime","_ref3","_ref4","quantity","ButtonLink","size","preparation","PageContainer","PathInfo","MainTitle","Subtitle","AddRecipeForm","createSelector","state","items","map","_id","label","selectCategories","selectActiveCategory","_","itemId","find"],"sourceRoot":""}